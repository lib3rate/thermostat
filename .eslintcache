[{"/home/liberate/projects/thermostat/src/index.js":"1","/home/liberate/projects/thermostat/src/App.js":"2","/home/liberate/projects/thermostat/src/serviceWorker.js":"3","/home/liberate/projects/thermostat/src/app/store.js":"4","/home/liberate/projects/thermostat/src/helpers/helpers.js":"5","/home/liberate/projects/thermostat/src/components/Navigation/Navigation.js":"6","/home/liberate/projects/thermostat/src/components/Navigation/navigationSlice.js":"7","/home/liberate/projects/thermostat/src/components/Navigation/NavigationItem.js":"8","/home/liberate/projects/thermostat/src/components/Buttons/ModeButton.js":"9","/home/liberate/projects/thermostat/src/components/Thermostat/Thermostat.js":"10","/home/liberate/projects/thermostat/src/components/Thermostat/thermostatSlice.js":"11","/home/liberate/projects/thermostat/src/components/Temperature/Temperature.js":"12"},{"size":644,"mtime":1612233743890,"results":"13","hashOfConfig":"14"},{"size":241,"mtime":1612415055300,"results":"15","hashOfConfig":"14"},{"size":5141,"mtime":1612233743890,"results":"16","hashOfConfig":"14"},{"size":334,"mtime":1612415055300,"results":"17","hashOfConfig":"14"},{"size":2762,"mtime":1612416087250,"results":"18","hashOfConfig":"14"},{"size":3876,"mtime":1612415055300,"results":"19","hashOfConfig":"14"},{"size":492,"mtime":1612329872290,"results":"20","hashOfConfig":"14"},{"size":904,"mtime":1612415055300,"results":"21","hashOfConfig":"14"},{"size":4495,"mtime":1612496804570,"results":"22","hashOfConfig":"14"},{"size":2984,"mtime":1612492964590,"results":"23","hashOfConfig":"14"},{"size":2580,"mtime":1612493338440,"results":"24","hashOfConfig":"14"},{"size":4566,"mtime":1612497711560,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"20lrqr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/liberate/projects/thermostat/src/index.js",[],["51","52"],"/home/liberate/projects/thermostat/src/App.js",[],"/home/liberate/projects/thermostat/src/serviceWorker.js",[],"/home/liberate/projects/thermostat/src/app/store.js",[],"/home/liberate/projects/thermostat/src/helpers/helpers.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/Navigation.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/navigationSlice.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/NavigationItem.js",[],"/home/liberate/projects/thermostat/src/components/Buttons/ModeButton.js",[],"/home/liberate/projects/thermostat/src/components/Thermostat/Thermostat.js",["53","54"],"/home/liberate/projects/thermostat/src/components/Thermostat/thermostatSlice.js",["55","56"],"/home/liberate/projects/thermostat/src/components/Temperature/Temperature.js",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":42,"column":13,"nodeType":"64","endLine":69,"endColumn":4},{"ruleId":"62","severity":1,"message":"65","line":69,"column":6,"nodeType":"66","endLine":69,"endColumn":8,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":34,"column":38,"nodeType":"70","messageId":"71","endLine":34,"endColumn":62},{"ruleId":"68","severity":1,"message":"69","line":41,"column":38,"nodeType":"70","messageId":"71","endLine":41,"endColumn":62},{"ruleId":"62","severity":1,"message":"72","line":57,"column":12,"nodeType":"73","endLine":57,"endColumn":28},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'localStorageId', and 'thermostatId'. Either include them or remove the dependency array.","ArrayExpression",["76"],"no-self-assign","'state.desiredTemperature' is assigned to itself.","MemberExpression","selfAssignment","Assignments to the 'mode' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [dispatch, localStorageId, thermostatId]",{"range":"79","text":"80"},[2178,2180],"[dispatch, localStorageId, thermostatId]"]