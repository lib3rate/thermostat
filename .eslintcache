[{"/home/liberate/projects/thermostat/src/index.js":"1","/home/liberate/projects/thermostat/src/App.js":"2","/home/liberate/projects/thermostat/src/serviceWorker.js":"3","/home/liberate/projects/thermostat/src/app/store.js":"4","/home/liberate/projects/thermostat/src/helpers/helpers.js":"5","/home/liberate/projects/thermostat/src/components/Navigation/Navigation.js":"6","/home/liberate/projects/thermostat/src/components/Navigation/navigationSlice.js":"7","/home/liberate/projects/thermostat/src/components/Navigation/NavigationItem.js":"8","/home/liberate/projects/thermostat/src/components/Buttons/ModeButton.js":"9","/home/liberate/projects/thermostat/src/components/Thermostat/Thermostat.js":"10","/home/liberate/projects/thermostat/src/components/Thermostat/thermostatSlice.js":"11","/home/liberate/projects/thermostat/src/components/Temperature/Temperature.js":"12","/home/liberate/projects/thermostat/src/components/Alert/Alert.js":"13","/home/liberate/projects/thermostat/src/components/Alert/alertSlice.js":"14"},{"size":644,"mtime":1612233743890,"results":"15","hashOfConfig":"16"},{"size":304,"mtime":1612509249720,"results":"17","hashOfConfig":"16"},{"size":5141,"mtime":1612233743890,"results":"18","hashOfConfig":"16"},{"size":420,"mtime":1612509249720,"results":"19","hashOfConfig":"16"},{"size":2809,"mtime":1612509249720,"results":"20","hashOfConfig":"16"},{"size":4468,"mtime":1612581107330,"results":"21","hashOfConfig":"16"},{"size":492,"mtime":1612329872290,"results":"22","hashOfConfig":"16"},{"size":1206,"mtime":1612581119040,"results":"23","hashOfConfig":"16"},{"size":4032,"mtime":1612581221570,"results":"24","hashOfConfig":"16"},{"size":3724,"mtime":1612581494540,"results":"25","hashOfConfig":"16"},{"size":2484,"mtime":1612509860550,"results":"26","hashOfConfig":"16"},{"size":4525,"mtime":1612509249720,"results":"27","hashOfConfig":"16"},{"size":971,"mtime":1612509639540,"results":"28","hashOfConfig":"16"},{"size":622,"mtime":1612509249720,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"20lrqr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/liberate/projects/thermostat/src/index.js",[],["60","61"],"/home/liberate/projects/thermostat/src/App.js",[],"/home/liberate/projects/thermostat/src/serviceWorker.js",[],"/home/liberate/projects/thermostat/src/app/store.js",[],"/home/liberate/projects/thermostat/src/helpers/helpers.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/Navigation.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/navigationSlice.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/NavigationItem.js",["62"],"/home/liberate/projects/thermostat/src/components/Buttons/ModeButton.js",[],"/home/liberate/projects/thermostat/src/components/Thermostat/Thermostat.js",["63","64"],"/home/liberate/projects/thermostat/src/components/Thermostat/thermostatSlice.js",[],"/home/liberate/projects/thermostat/src/components/Temperature/Temperature.js",["65"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nimport {\r\n  selectCurrentIndoorTemperature,\r\n  increaseDesiredTemperature,\r\n  decreaseDesiredTemperature,\r\n} from '../Thermostat/thermostatSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  temperatureContainer: {\r\n    width: '50%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  temperature: {\r\n    margin: '1rem',\r\n    fontSize: '4rem'\r\n  }\r\n}));\r\n\r\nexport default function Temperature(props) {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const currentIndoorTemperature = useSelector(selectCurrentIndoorTemperature);\r\n\r\n  return (\r\n    <div className={classes.temperatureContainer}>\r\n      <Fab\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        aria-label=\"increase\"\r\n        onClick={() => dispatch(increaseDesiredTemperature())}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <span className={classes.temperature}>{currentIndoorTemperature}Â°</span>\r\n      <Fab\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        aria-label=\"decrease\"\r\n        onClick={()=>dispatch(decreaseDesiredTemperature())}\r\n      >\r\n        <RemoveIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}","/home/liberate/projects/thermostat/src/components/Alert/Alert.js",[],"/home/liberate/projects/thermostat/src/components/Alert/alertSlice.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":5,"column":22,"nodeType":"72","messageId":"73","endLine":5,"endColumn":30},{"ruleId":"74","severity":1,"message":"75","line":48,"column":13,"nodeType":"76","endLine":92,"endColumn":4},{"ruleId":"74","severity":1,"message":"77","line":92,"column":6,"nodeType":"78","endLine":92,"endColumn":8,"suggestions":"79"},{"ruleId":"70","severity":1,"message":"80","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'localStorageId', and 'thermostatId'. Either include them or remove the dependency array.","ArrayExpression",["83"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [dispatch, localStorageId, thermostatId]",{"range":"86","text":"87"},[2875,2877],"[dispatch, localStorageId, thermostatId]"]