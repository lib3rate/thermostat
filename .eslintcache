[{"/home/liberate/projects/thermostat/src/index.js":"1","/home/liberate/projects/thermostat/src/App.js":"2","/home/liberate/projects/thermostat/src/serviceWorker.js":"3","/home/liberate/projects/thermostat/src/app/store.js":"4","/home/liberate/projects/thermostat/src/helpers/helpers.js":"5","/home/liberate/projects/thermostat/src/components/Navigation/Navigation.js":"6","/home/liberate/projects/thermostat/src/components/Navigation/navigationSlice.js":"7","/home/liberate/projects/thermostat/src/components/Navigation/NavigationItem.js":"8","/home/liberate/projects/thermostat/src/components/Buttons/ModeButton.js":"9","/home/liberate/projects/thermostat/src/components/Thermostat/Thermostat.js":"10","/home/liberate/projects/thermostat/src/components/Thermostat/thermostatSlice.js":"11","/home/liberate/projects/thermostat/src/components/Temperature/Temperature.js":"12","/home/liberate/projects/thermostat/src/components/Alert/alertSlice.js":"13","/home/liberate/projects/thermostat/src/components/Alert/Alert.js":"14"},{"size":644,"mtime":1612233743890,"results":"15","hashOfConfig":"16"},{"size":304,"mtime":1612591918420,"results":"17","hashOfConfig":"16"},{"size":5141,"mtime":1612233743890,"results":"18","hashOfConfig":"16"},{"size":420,"mtime":1612591918420,"results":"19","hashOfConfig":"16"},{"size":3410,"mtime":1613447901710,"results":"20","hashOfConfig":"16"},{"size":4468,"mtime":1612591918420,"results":"21","hashOfConfig":"16"},{"size":492,"mtime":1612329872290,"results":"22","hashOfConfig":"16"},{"size":1206,"mtime":1612591918420,"results":"23","hashOfConfig":"16"},{"size":4008,"mtime":1618779062740,"results":"24","hashOfConfig":"16"},{"size":4432,"mtime":1618779060830,"results":"25","hashOfConfig":"16"},{"size":2161,"mtime":1612594564520,"results":"26","hashOfConfig":"16"},{"size":4726,"mtime":1613448047910,"results":"27","hashOfConfig":"16"},{"size":622,"mtime":1612591918420,"results":"28","hashOfConfig":"16"},{"size":971,"mtime":1612591918420,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"20lrqr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/liberate/projects/thermostat/src/index.js",[],["60","61"],"/home/liberate/projects/thermostat/src/App.js",[],"/home/liberate/projects/thermostat/src/serviceWorker.js",[],"/home/liberate/projects/thermostat/src/app/store.js",[],"/home/liberate/projects/thermostat/src/helpers/helpers.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/Navigation.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/navigationSlice.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/NavigationItem.js",["62"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { changeDrawerUnit, selectCurrentUnit } from './navigationSlice';\r\nimport { changeThermostatUnit } from '../Thermostat/thermostatSlice';\r\n\r\nexport default function NavigationItem(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentUnit = useSelector(selectCurrentUnit);\r\n\r\n  const changeUnit = unit => {\r\n    dispatch(changeDrawerUnit(unit));\r\n    dispatch(changeThermostatUnit(unit));\r\n  };\r\n\r\n  function checkIfSelected() {\r\n    return props.unit === currentUnit ? true : false;\r\n  }\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      onClick={() => changeUnit(props.unit)}\r\n      selected={checkIfSelected()}\r\n    >\r\n      <ListItemText primary={props.unit} />\r\n    </ListItem>\r\n  );\r\n}","/home/liberate/projects/thermostat/src/components/Buttons/ModeButton.js",[],"/home/liberate/projects/thermostat/src/components/Thermostat/Thermostat.js",["63","64"],"/home/liberate/projects/thermostat/src/components/Thermostat/thermostatSlice.js",[],"/home/liberate/projects/thermostat/src/components/Temperature/Temperature.js",[],"/home/liberate/projects/thermostat/src/components/Alert/alertSlice.js",[],"/home/liberate/projects/thermostat/src/components/Alert/Alert.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":22,"nodeType":"71","messageId":"72","endLine":5,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":53,"column":13,"nodeType":"75","endLine":97,"endColumn":4},{"ruleId":"73","severity":1,"message":"76","line":97,"column":6,"nodeType":"77","endLine":97,"endColumn":8,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'loadStatus', 'localStorageId', and 'thermostatId'. Either include them or remove the dependency array.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [dispatch, loadStatus, localStorageId, thermostatId]",{"range":"84","text":"85"},[3039,3041],"[dispatch, loadStatus, localStorageId, thermostatId]"]