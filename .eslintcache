[{"/home/liberate/projects/thermostat/src/index.js":"1","/home/liberate/projects/thermostat/src/App.js":"2","/home/liberate/projects/thermostat/src/serviceWorker.js":"3","/home/liberate/projects/thermostat/src/app/store.js":"4","/home/liberate/projects/thermostat/src/helpers/helpers.js":"5","/home/liberate/projects/thermostat/src/components/Navigation/Navigation.js":"6","/home/liberate/projects/thermostat/src/components/Navigation/navigationSlice.js":"7","/home/liberate/projects/thermostat/src/components/Navigation/NavigationItem.js":"8","/home/liberate/projects/thermostat/src/components/Buttons/ModeButton.js":"9","/home/liberate/projects/thermostat/src/components/Thermostat/Thermostat.js":"10","/home/liberate/projects/thermostat/src/components/Thermostat/thermostatSlice.js":"11","/home/liberate/projects/thermostat/src/components/Temperature/Temperature.js":"12","/home/liberate/projects/thermostat/src/components/Alert/Alert.js":"13","/home/liberate/projects/thermostat/src/components/Alert/alertSlice.js":"14"},{"size":644,"mtime":1612233743890,"results":"15","hashOfConfig":"16"},{"size":304,"mtime":1612504438500,"results":"17","hashOfConfig":"16"},{"size":5141,"mtime":1612233743890,"results":"18","hashOfConfig":"16"},{"size":420,"mtime":1612504574780,"results":"19","hashOfConfig":"16"},{"size":2809,"mtime":1612509075980,"results":"20","hashOfConfig":"16"},{"size":3876,"mtime":1612415055300,"results":"21","hashOfConfig":"16"},{"size":492,"mtime":1612329872290,"results":"22","hashOfConfig":"16"},{"size":904,"mtime":1612415055300,"results":"23","hashOfConfig":"16"},{"size":4017,"mtime":1612508912330,"results":"24","hashOfConfig":"16"},{"size":3588,"mtime":1612507425160,"results":"25","hashOfConfig":"16"},{"size":2580,"mtime":1612493338440,"results":"26","hashOfConfig":"16"},{"size":4525,"mtime":1612508911490,"results":"27","hashOfConfig":"16"},{"size":991,"mtime":1612506814740,"results":"28","hashOfConfig":"16"},{"size":622,"mtime":1612506276750,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"20lrqr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/liberate/projects/thermostat/src/index.js",[],["60","61"],"/home/liberate/projects/thermostat/src/App.js",[],"/home/liberate/projects/thermostat/src/serviceWorker.js",[],"/home/liberate/projects/thermostat/src/app/store.js",[],"/home/liberate/projects/thermostat/src/helpers/helpers.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/Navigation.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/navigationSlice.js",[],"/home/liberate/projects/thermostat/src/components/Navigation/NavigationItem.js",[],"/home/liberate/projects/thermostat/src/components/Buttons/ModeButton.js",["62","63"],"/home/liberate/projects/thermostat/src/components/Thermostat/Thermostat.js",["64","65"],"/home/liberate/projects/thermostat/src/components/Thermostat/thermostatSlice.js",["66","67"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const thermostatSlice = createSlice({\r\n  name: 'thermostat',\r\n  initialState: {\r\n    id: '',\r\n    currentUnit: 'Unit 100',\r\n    mode: 'off',\r\n    currentIndoorTemperature: null,\r\n    currentOutdoorTemperature: null,\r\n    desiredTemperature: null,\r\n  },\r\n  reducers: {\r\n    registerThermostat: (state, action) => {\r\n      state.id = action.payload;\r\n    },\r\n    changeThermostatUnit: (state, action) => {\r\n      state.currentUnit = action.payload;\r\n    },\r\n    setMode: (state, action) => {\r\n      state.mode = action.payload;\r\n    },\r\n    setCurrentIndoorTemperature: (state, action) => {\r\n      state.currentIndoorTemperature = action.payload;\r\n    },\r\n    setCurrentOutdoorTemperature: (state, action) => {\r\n      state.currentOutdoorTemperature = action.payload;\r\n    },\r\n    setDesiredTemperature: (state, action) => {\r\n      state.desiredTemperature = action.payload;\r\n    },\r\n    increaseDesiredTemperature: state => {\r\n      state.desiredTemperature\r\n        ? state.desiredTemperature = state.desiredTemperature\r\n        : state.desiredTemperature = state.currentIndoorTemperature;\r\n\r\n      state.desiredTemperature += 1;\r\n    },\r\n    decreaseDesiredTemperature: state => {\r\n      state.desiredTemperature\r\n        ? state.desiredTemperature = state.desiredTemperature\r\n        : state.desiredTemperature = state.currentIndoorTemperature;\r\n\r\n      state.desiredTemperature -= 1;\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  registerThermostat,\r\n  changeThermostatUnit,\r\n  setMode,\r\n  setCurrentIndoorTemperature,\r\n  setCurrentOutdoorTemperature,\r\n  setDesiredTemperature,\r\n  increaseDesiredTemperature,\r\n  decreaseDesiredTemperature\r\n} = thermostatSlice.actions;\r\n\r\n// Asynchronous state mutations\r\n// export const setReceivedIndoorTemperature = temperature => dispatch => {\r\n//   dispatch(setCurrentIndoorTemperature(temperature));\r\n// };\r\n\r\n// export const setReceivedOutdoorTemperature = temperature => dispatch => {\r\n//   dispatch(setCurrentOutdoorTemperature(temperature));\r\n// };\r\n\r\n// Selectors\r\nexport const selectId = state => state.thermostat.id;\r\nexport const selectCurrentUnit = state => state.thermostat.currentUnit;\r\nexport const selectMode = state => state.thermostat.mode;\r\nexport const selectCurrentIndoorTemperature = state => state.thermostat.currentIndoorTemperature;\r\nexport const selectCurrentOutdoorTemperature = state => state.thermostat.currentOutdoorTemperature;\r\nexport const selectDesiredTemperature = state => state.thermostat.desiredTemperature;\r\n\r\nexport default thermostatSlice.reducer;\r\n","/home/liberate/projects/thermostat/src/components/Temperature/Temperature.js",["68"],"/home/liberate/projects/thermostat/src/components/Alert/Alert.js",["69"],"/home/liberate/projects/thermostat/src/components/Alert/alertSlice.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":2,"message":"75","line":66,"column":41,"nodeType":"76","messageId":"77","endLine":66,"endColumn":45},{"ruleId":"74","severity":2,"message":"75","line":66,"column":65,"nodeType":"76","messageId":"77","endLine":66,"endColumn":69},{"ruleId":"78","severity":1,"message":"79","line":43,"column":13,"nodeType":"80","endLine":87,"endColumn":4},{"ruleId":"78","severity":1,"message":"81","line":87,"column":6,"nodeType":"82","endLine":87,"endColumn":8,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":34,"column":38,"nodeType":"86","messageId":"87","endLine":34,"endColumn":62},{"ruleId":"84","severity":1,"message":"85","line":41,"column":38,"nodeType":"86","messageId":"87","endLine":41,"endColumn":62},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"76","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"91","line":8,"column":3,"nodeType":"76","messageId":"90","endLine":8,"endColumn":18},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-undef","'mode' is not defined.","Identifier","undef","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'localStorageId', and 'thermostatId'. Either include them or remove the dependency array.","ArrayExpression",["94"],"no-self-assign","'state.desiredTemperature' is assigned to itself.","MemberExpression","selfAssignment","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'setAlertMessage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [dispatch, localStorageId, thermostatId]",{"range":"97","text":"98"},[2782,2784],"[dispatch, localStorageId, thermostatId]"]